{
    "docs": [
        {
            "location": "/", 
            "text": "Hacman - Ox CNC\n\n\nOverview\n\n\nThis is a series of docs for the use of the Ox CNC within the Hackspace. \n\nThis was originally run as part of a pledge run: \nhttp://wiki.hacman.org.uk/Pledges/OxCNCIan\n \n\n(Many thanks to Ian for all the additional bits)\n\n\nThe docs are largley split into 3 sections\n\n\n\n\nCAD / CAM\n - First use the CAD / CAM Software to create the G-Code\n\n\nMilling\n - once you have the G-Code to run on the mill use this section to carry out the milling\n\n\nMaintenance\n - Note for future upgrates etc\n\n\n\n\n \n\n\nWorkFlow\n\n\n\n\nYou design your part in Cad software or as a vector diagram / inkscape etc\n\n\nYou pass the design into CAM software which plots out the paths needed to mill the part (similar to a 3D Printer slicer)\n\n\nYou run the generated G-Code on the mill (usually via chillipepr)\n\n\n\n\nWith a 3d Printer generally it\ns a lot simpler, but with a CNC you instead have to decide which tools to use, which areas to mill etc.\nThe software automates a lot of it, but there\ns a lot of different ways to mill a part which can make the process a little more complex\ndepending on what it is your trying to do.\n\n\nThe post processor is usually a part of the Cam software that generates G-Code for specific types of CNC. \n\nThis could include one processor for Grbl, another for TinyG. The one we\nre interested in is Grbl 1.1 \n\nGenerally if there\ns a post processor for LinuxCNC then this should also work with Grbl.\n\n\n\n\nSoftware\n\n\nOpen Source Software\n\n\n\n\nJSCut\n - Easiest to use Open source Cam software, limited to 2.5 CAM / 2 dimensional profiles similar to a laser cutter\n\n\nFlatCAM\n - PCB Milling via G-Code, this is one of the few PCB to G-Code softwares that has a GUI.\n\n\nPyCAM\n - Can handle STL Files and generate 3D Cam profiles, but seems not to be updated often\n\n\nFreeCad\n - Path workspace, this is the closest match to Solidworks in the open source world and has support for importing openscad files\n\n\nHeeksCad / HeeksCNC\n\n\n\n\nFree / Non open source software\n\n\n\n\nAutodesk Fusion 360 CAM / Cad\n\n\n\n\nCommercial Software\n\n\nGenerally CAM software falls into two catagories one for solid parts such as gears / wheels etc, this includes HsmWorks and MasterCAM.\nThe second for graphical artworks such as fancy reliefs like dragons or lettering or Han solo in carbonite. \n\n\n\n\nHsmWorks / Solidworks\n - Milling Solid 3D parts\n\n\nMasterCam / Solidworks\n - Milling Solid 3D parts\n\n\nAspire\n - Milling graphical / artwork type patterns such as lettering or meshes.\n\n\nAutodesk ArtCam\n - Milling graphical / artwork type patterns such as lettering or meshes.\n\n\n\n\nIf your using Solidworks then the top two items of commercial CAM software includes Hsmworks and MasterCam. \n\nHsmworks is by far the easiest to use, but not to good at turning or 4 / 5 Axis. \n\nMasterCam has the most features but is much more difficult to use.", 
            "title": "Home"
        }, 
        {
            "location": "/#hacman-ox-cnc", 
            "text": "", 
            "title": "Hacman - Ox CNC"
        }, 
        {
            "location": "/#overview", 
            "text": "This is a series of docs for the use of the Ox CNC within the Hackspace.  \nThis was originally run as part of a pledge run:  http://wiki.hacman.org.uk/Pledges/OxCNCIan   \n(Many thanks to Ian for all the additional bits)  The docs are largley split into 3 sections   CAD / CAM  - First use the CAD / CAM Software to create the G-Code  Milling  - once you have the G-Code to run on the mill use this section to carry out the milling  Maintenance  - Note for future upgrates etc", 
            "title": "Overview"
        }, 
        {
            "location": "/#workflow", 
            "text": "You design your part in Cad software or as a vector diagram / inkscape etc  You pass the design into CAM software which plots out the paths needed to mill the part (similar to a 3D Printer slicer)  You run the generated G-Code on the mill (usually via chillipepr)   With a 3d Printer generally it s a lot simpler, but with a CNC you instead have to decide which tools to use, which areas to mill etc.\nThe software automates a lot of it, but there s a lot of different ways to mill a part which can make the process a little more complex\ndepending on what it is your trying to do.  The post processor is usually a part of the Cam software that generates G-Code for specific types of CNC.  \nThis could include one processor for Grbl, another for TinyG. The one we re interested in is Grbl 1.1  \nGenerally if there s a post processor for LinuxCNC then this should also work with Grbl.", 
            "title": "WorkFlow"
        }, 
        {
            "location": "/#software", 
            "text": "", 
            "title": "Software"
        }, 
        {
            "location": "/#open-source-software", 
            "text": "JSCut  - Easiest to use Open source Cam software, limited to 2.5 CAM / 2 dimensional profiles similar to a laser cutter  FlatCAM  - PCB Milling via G-Code, this is one of the few PCB to G-Code softwares that has a GUI.  PyCAM  - Can handle STL Files and generate 3D Cam profiles, but seems not to be updated often  FreeCad  - Path workspace, this is the closest match to Solidworks in the open source world and has support for importing openscad files  HeeksCad / HeeksCNC", 
            "title": "Open Source Software"
        }, 
        {
            "location": "/#free-non-open-source-software", 
            "text": "Autodesk Fusion 360 CAM / Cad", 
            "title": "Free / Non open source software"
        }, 
        {
            "location": "/#commercial-software", 
            "text": "Generally CAM software falls into two catagories one for solid parts such as gears / wheels etc, this includes HsmWorks and MasterCAM.\nThe second for graphical artworks such as fancy reliefs like dragons or lettering or Han solo in carbonite.    HsmWorks / Solidworks  - Milling Solid 3D parts  MasterCam / Solidworks  - Milling Solid 3D parts  Aspire  - Milling graphical / artwork type patterns such as lettering or meshes.  Autodesk ArtCam  - Milling graphical / artwork type patterns such as lettering or meshes.   If your using Solidworks then the top two items of commercial CAM software includes Hsmworks and MasterCam.  \nHsmworks is by far the easiest to use, but not to good at turning or 4 / 5 Axis.  \nMasterCam has the most features but is much more difficult to use.", 
            "title": "Commercial Software"
        }, 
        {
            "location": "/Milling/Connecting/", 
            "text": "Connecting to the CNC\n\n\nOverview\n\n\nThe CNC is reachable via a Rpi over the network which acts as a serial proxy\n\n\nIf using Windows 10 then I\nd recommend using a separate desktop window, and using a browser other than your main one\n(such as Firefox or chrome) so that you can continue to do other things (such as browser the web) with your\nmain browser etc. without interfering with the milling process.\n\n\nTry to avoid using the Microsoft Edge Browser as an alternate browser, it seems to be okay sending commands to the mill, but I\nve noticed the\ncontrols become locked up / unresponsive during the process of sending G-Code / doing the actual mill.\n\n\nPowering Up\n\n\nFirst we need to power up the mill\n\n\n \n\n\n\n\nThe green button is for on, the red button is for off\n\n\nThe red EStop button is the same as the red push button for off\n\n\nThe power these buttons control goes to the stepper drivers and the spindle motor\n\n\n\n\nThe grbl board and the rpi board are powered separately and are powered on all the time regardless. \n\nBecause of this reason it\ns important to perform a homing operation when turning the power on\n\n\nStarting Chillipepr\n\n\nNext we\nre going to start up Chillipepr.\n\n\nChillipepr is a online system consisting of a series of web pages and JavaScript scripts pulled in from other sites. \n\nThere has been an attempt to create an offline version, but for now it\ns easier just to browse the online version. \n\nThe JavaScript within Chillipepr will connect to a Serial Port Json Server located on the Rpi.\n\n\n\n\nOpen up a browser window\n\n\nBrowse to \nhttp://hacman.org.uk/cnc\n\n\nThis should be a shortcut to the jpadie version of chillipepr\n\n\n\n\nNote the link is different than normal chillipepr / grbl as we\nre using firmware version 1.1 instead of 0.9 \n\n\nConnecting Chillipepr to the CNC\n\n\nIf you\nve never connected to the CNC before then select Scan for Hosts.\n\n\n \n\n\nThis should discover the server to connect to, select this to connect\n\n\n \n\n\nIn the drop down lists make sure \nGrbl\n is selected, and the maximum baud rate \n115,200\n \n\nThe older versions of Grbl used to use a slower baud rate of around 9600, but the later versions use the max 115,200 speed instead.\n\n\nOnce you\nve selected Grbl in the drop down, click the tick box on the left to initiate the connection to the board.\n\n\n \n\n\nHoming\n\n\nOne of the first steps to do after powering up the mill is to home the device. \n\nSee the \nJogging Section\n on how to do this.\n\n\nWithout homing there\ns the risk the machine may go too far downwards. \n\nas this is limited by software limits which rely on grbl knowing where the home position is. \n\nOr the machine not going far enough down if it thinks it\ns in the wrong place.\n\n\nConnecting via Http\n\n\nIf you want to instead connect to the CNC via a Serial Console, it\ns possible to access the serial port via the browser\n\n\n\n\nFirst browse to the following link in a web browser \n\n    \nhttp://172.16.0.8:8989\n\n\n\n\nTo send a command like $$ which lists the grbl settings we can use the following within the web client\n\n\nsend /dev/ttyACM0 $$\n\n\n\n\n\n\nTo send G-Code:\n    \nhttp://www.shapeoko.com/wiki/index.php/G-Code", 
            "title": "Connecting"
        }, 
        {
            "location": "/Milling/Connecting/#connecting-to-the-cnc", 
            "text": "", 
            "title": "Connecting to the CNC"
        }, 
        {
            "location": "/Milling/Connecting/#overview", 
            "text": "The CNC is reachable via a Rpi over the network which acts as a serial proxy  If using Windows 10 then I d recommend using a separate desktop window, and using a browser other than your main one\n(such as Firefox or chrome) so that you can continue to do other things (such as browser the web) with your\nmain browser etc. without interfering with the milling process.  Try to avoid using the Microsoft Edge Browser as an alternate browser, it seems to be okay sending commands to the mill, but I ve noticed the\ncontrols become locked up / unresponsive during the process of sending G-Code / doing the actual mill.", 
            "title": "Overview"
        }, 
        {
            "location": "/Milling/Connecting/#powering-up", 
            "text": "First we need to power up the mill      The green button is for on, the red button is for off  The red EStop button is the same as the red push button for off  The power these buttons control goes to the stepper drivers and the spindle motor   The grbl board and the rpi board are powered separately and are powered on all the time regardless.  \nBecause of this reason it s important to perform a homing operation when turning the power on", 
            "title": "Powering Up"
        }, 
        {
            "location": "/Milling/Connecting/#starting-chillipepr", 
            "text": "Next we re going to start up Chillipepr.  Chillipepr is a online system consisting of a series of web pages and JavaScript scripts pulled in from other sites.  \nThere has been an attempt to create an offline version, but for now it s easier just to browse the online version.  \nThe JavaScript within Chillipepr will connect to a Serial Port Json Server located on the Rpi.   Open up a browser window  Browse to  http://hacman.org.uk/cnc  This should be a shortcut to the jpadie version of chillipepr   Note the link is different than normal chillipepr / grbl as we re using firmware version 1.1 instead of 0.9", 
            "title": "Starting Chillipepr"
        }, 
        {
            "location": "/Milling/Connecting/#connecting-chillipepr-to-the-cnc", 
            "text": "If you ve never connected to the CNC before then select Scan for Hosts.     This should discover the server to connect to, select this to connect     In the drop down lists make sure  Grbl  is selected, and the maximum baud rate  115,200   \nThe older versions of Grbl used to use a slower baud rate of around 9600, but the later versions use the max 115,200 speed instead.  Once you ve selected Grbl in the drop down, click the tick box on the left to initiate the connection to the board.", 
            "title": "Connecting Chillipepr to the CNC"
        }, 
        {
            "location": "/Milling/Connecting/#homing", 
            "text": "One of the first steps to do after powering up the mill is to home the device.  \nSee the  Jogging Section  on how to do this.  Without homing there s the risk the machine may go too far downwards.  \nas this is limited by software limits which rely on grbl knowing where the home position is.  \nOr the machine not going far enough down if it thinks it s in the wrong place.", 
            "title": "Homing"
        }, 
        {
            "location": "/Milling/Connecting/#connecting-via-http", 
            "text": "If you want to instead connect to the CNC via a Serial Console, it s possible to access the serial port via the browser   First browse to the following link in a web browser  \n     http://172.16.0.8:8989   To send a command like $$ which lists the grbl settings we can use the following within the web client  send /dev/ttyACM0 $$   To send G-Code:\n     http://www.shapeoko.com/wiki/index.php/G-Code", 
            "title": "Connecting via Http"
        }, 
        {
            "location": "/Milling/Jog/", 
            "text": "Jogging the CNC\n\n\nOverview\n\n\nOne of the first things to learn how to do is to jog the device using the controls at the upper right hand corner. \n\nYou may need to use the arrow button to expand the tab out to see all the controls.\n\n\n \n\n\nMoving in Increments\n\n\nIt\ns possible to move the head of the mill in small increments by using the following buttons.\n\n\n \n\n\nBy default, the amount to move should be in mm, it\ns possible to set larger or smaller values to move using the buttons underneath.\nTo use a value larger than 1 just use the custom drop down.\n\n\n \n\n\nNote\n be careful to make sure the machine is homed after enabling the power to the machine. \n\nThis should avoid the machine moving too far / crashing into itself.\n\n\nHoming the machine\n\n\nOne of the first steps we need to do is to home the machine.\n\n\n \n\n\nThis will trigger the machine to move to the lower left upwards corner. \n\nThere are limit switches for left to right and for front to back. \n\nThere\ns also a limit switch for the head moving upwards but not downwards.\n\n\nSoftware limits have also been enabled which prevents the machine from traveling too far downwards,\nbut this relies on the homing of the machine being correct. \n\nIf the machine hasn\nt been homed then this may result in the machine stopping before it should when traveling.\n\n\nZeroing the machine\n\n\nCNC\ns tend to have a concept of a zero point. \n\nThe best way to imagine this is the starting point from which the G-Code will start to run.\n\n\nThe zero point is the reference to which all other move operations occur. \n\nThis zero point can be anywhere\n\n\n\n\nUsually you set the zero point to the bottom left corner of where you will be milling from.\n\n\nAlso it\ns best to set the Z Axis (height of the mill bit above the material) so that it\ns just touching the top of the material that\ns going to be milled.\n\n\nOne trick to getting the Z Height right is to turn the spindle on, and to jog the machine down slightly until you start to hear it grind against the wood.\n\n\nThis assumes you have set the origin in the Cam software to the \nbottom left\n corner at the \ntop\n of the material\n\n\n\n\nOnce the head is in the right place you can then use the \nZero Out\n button to tell the grbl firmware that this is the new starting point.\n\n\n \n\n\nThe \nGo To Zero\n button should be used carefully, this will cause the cnc head to move back to the zero point if it\ns currently in some other location.\nIf the zero point isn\nt set right then you might cause the head to crash into the milling material.\n\n\nNote with Grbl and Chillipepr only G92 based Axis is supported which is a temporary axis which tends to be reset between power cycles. \n\nGrbl actually has support for G53 / G54 G-Codes for more permentant relative axis, but this can\nt be set within Chillipepr.", 
            "title": "Jogging / Moving the CNC"
        }, 
        {
            "location": "/Milling/Jog/#jogging-the-cnc", 
            "text": "", 
            "title": "Jogging the CNC"
        }, 
        {
            "location": "/Milling/Jog/#overview", 
            "text": "One of the first things to learn how to do is to jog the device using the controls at the upper right hand corner.  \nYou may need to use the arrow button to expand the tab out to see all the controls.", 
            "title": "Overview"
        }, 
        {
            "location": "/Milling/Jog/#moving-in-increments", 
            "text": "It s possible to move the head of the mill in small increments by using the following buttons.     By default, the amount to move should be in mm, it s possible to set larger or smaller values to move using the buttons underneath.\nTo use a value larger than 1 just use the custom drop down.     Note  be careful to make sure the machine is homed after enabling the power to the machine.  \nThis should avoid the machine moving too far / crashing into itself.", 
            "title": "Moving in Increments"
        }, 
        {
            "location": "/Milling/Jog/#homing-the-machine", 
            "text": "One of the first steps we need to do is to home the machine.     This will trigger the machine to move to the lower left upwards corner.  \nThere are limit switches for left to right and for front to back.  \nThere s also a limit switch for the head moving upwards but not downwards.  Software limits have also been enabled which prevents the machine from traveling too far downwards,\nbut this relies on the homing of the machine being correct.  \nIf the machine hasn t been homed then this may result in the machine stopping before it should when traveling.", 
            "title": "Homing the machine"
        }, 
        {
            "location": "/Milling/Jog/#zeroing-the-machine", 
            "text": "CNC s tend to have a concept of a zero point.  \nThe best way to imagine this is the starting point from which the G-Code will start to run.  The zero point is the reference to which all other move operations occur.  \nThis zero point can be anywhere   Usually you set the zero point to the bottom left corner of where you will be milling from.  Also it s best to set the Z Axis (height of the mill bit above the material) so that it s just touching the top of the material that s going to be milled.  One trick to getting the Z Height right is to turn the spindle on, and to jog the machine down slightly until you start to hear it grind against the wood.  This assumes you have set the origin in the Cam software to the  bottom left  corner at the  top  of the material   Once the head is in the right place you can then use the  Zero Out  button to tell the grbl firmware that this is the new starting point.     The  Go To Zero  button should be used carefully, this will cause the cnc head to move back to the zero point if it s currently in some other location.\nIf the zero point isn t set right then you might cause the head to crash into the milling material.  Note with Grbl and Chillipepr only G92 based Axis is supported which is a temporary axis which tends to be reset between power cycles.  \nGrbl actually has support for G53 / G54 G-Codes for more permentant relative axis, but this can t be set within Chillipepr.", 
            "title": "Zeroing the machine"
        }, 
        {
            "location": "/Milling/Loading-Setup/", 
            "text": "Loading the G-Code\n\n\nLoading from a local file on Disk\n\n\nIn order to load a local G-Code file on disk,\n\nyou just drag and drop the file on top of the browser window with Chillipepr In\n\n\nRecent Files\n\n\nChillipepr seems to cache the most recent files that have been dragged / dropped onto it. \n\nIf you need to clear the cache for any reason the controls at the upper left can be used. \n\nThese can also reset the G-Code to the default Chillipepr logo.\n\n\n \n\n\n \n\n\nWidgets\n\n\nThere are a number of widgets available that can be handy to use\n\n\n\n\nAuto-Level\n - This can be used with an inductive sensor to map out the imperfections in a copper board before milling.\n\n\nJSCut\n - This can be used to directly import G-Code from JSCut\n\n\nEagle BRD Import\n - This can be used for importing a Eagle board file in and converting it to G-Code. \n\n    For Gerber files from other ECad software such as KiCad I\nd suggest looking at FlatCAM first then using the Auto-level feature in combination.\n\n\nTouchPlate\n - Can be used (once we have a sensor setup) to position the end of the mill bit on the Z Axis correctly.", 
            "title": "Loading and Setup"
        }, 
        {
            "location": "/Milling/Loading-Setup/#loading-the-g-code", 
            "text": "", 
            "title": "Loading the G-Code"
        }, 
        {
            "location": "/Milling/Loading-Setup/#loading-from-a-local-file-on-disk", 
            "text": "In order to load a local G-Code file on disk, \nyou just drag and drop the file on top of the browser window with Chillipepr In", 
            "title": "Loading from a local file on Disk"
        }, 
        {
            "location": "/Milling/Loading-Setup/#recent-files", 
            "text": "Chillipepr seems to cache the most recent files that have been dragged / dropped onto it.  \nIf you need to clear the cache for any reason the controls at the upper left can be used.  \nThese can also reset the G-Code to the default Chillipepr logo.", 
            "title": "Recent Files"
        }, 
        {
            "location": "/Milling/Loading-Setup/#widgets", 
            "text": "There are a number of widgets available that can be handy to use   Auto-Level  - This can be used with an inductive sensor to map out the imperfections in a copper board before milling.  JSCut  - This can be used to directly import G-Code from JSCut  Eagle BRD Import  - This can be used for importing a Eagle board file in and converting it to G-Code.  \n    For Gerber files from other ECad software such as KiCad I d suggest looking at FlatCAM first then using the Auto-level feature in combination.  TouchPlate  - Can be used (once we have a sensor setup) to position the end of the mill bit on the Z Axis correctly.", 
            "title": "Widgets"
        }, 
        {
            "location": "/Milling/Simulation/", 
            "text": "Simulation\n\n\nOverview\n\n\nUsually the best simulation is done within the CAM Software such as HSMExpress.\nIt\ns also possible to simulate outside of cam via a couple of methods to see how the milling head will follow the path while milling\n\n\nChillipepr\n\n\nChillipepr has its own simulator that can be used to get a preview of the G-Code path within the browser window.\n\n\nSomething to be aware of is that Chillipepr has problems with curves in the simulator, it seems to just follow a diagonal line across the arc.\nWhen it comes to actual milling though this isn\nt a problem as the firmware of the CNC will perform the arc correctly and send feedback to Chillipepr as to its current location.\n\n\n \n\n\nCamotics\n\n\nOne app you can download and use to simulate the G-Code is Camotics.\nThis can be used to give you a simulation of what the part will look like once milled.\n\n\n\n\nhttp://camotics.org/", 
            "title": "Simulation"
        }, 
        {
            "location": "/Milling/Simulation/#simulation", 
            "text": "", 
            "title": "Simulation"
        }, 
        {
            "location": "/Milling/Simulation/#overview", 
            "text": "Usually the best simulation is done within the CAM Software such as HSMExpress.\nIt s also possible to simulate outside of cam via a couple of methods to see how the milling head will follow the path while milling", 
            "title": "Overview"
        }, 
        {
            "location": "/Milling/Simulation/#chillipepr", 
            "text": "Chillipepr has its own simulator that can be used to get a preview of the G-Code path within the browser window.  Something to be aware of is that Chillipepr has problems with curves in the simulator, it seems to just follow a diagonal line across the arc.\nWhen it comes to actual milling though this isn t a problem as the firmware of the CNC will perform the arc correctly and send feedback to Chillipepr as to its current location.", 
            "title": "Chillipepr"
        }, 
        {
            "location": "/Milling/Simulation/#camotics", 
            "text": "One app you can download and use to simulate the G-Code is Camotics.\nThis can be used to give you a simulation of what the part will look like once milled.   http://camotics.org/", 
            "title": "Camotics"
        }, 
        {
            "location": "/Milling/Material/", 
            "text": "Milling Material\n\n\nClamping Holes\n\n\nThe CNC has a spoiler board located on its base. Generally, you try to avoid milling into the spoiler but it can be replaced. \n\nThe current method for securing material is to just use a glue gun to stick it down then peel it off afterwards.\n\n\n \n\n\nLater on we may have some mounting holes for clamps, although those haven\nt been added in just yet.\n\n\nMDF\n\n\nSo far I\nve used MDF 12mm thick cut into sections using the table saw. \n\nHowever, it\ns advisable to limit the depth of a pass to about 2mm / 3mm or so at one time, to avoid overloading the stepper motors on the device (milling too much out at one time)\n\n\nMetal\n\n\nThe Ox CNC has Nema23 motor\ns but I think we\nre only driving them at about 50% of the power \n\ndue to the stepper drivers in use. Generally with metals you have to follow speeds and feeds. \n\nThis is where the speed of the spindle has to match the feedrate through the material.\n\n\n\n\nhttp://www.cnccookbook.com/GWCalcFeedsSpeeds.htm\n\n\n\n\nI\nd recommend trying two flute bits with aluminum. \n\nI\nve also got a rough speeds / feeds calculator here in the form of a spreadsheet:\n\n\n\n\nhttps://github.com/HACManchester/Tools.OxCNC/tree/master/MkDocs/docs/images/Milling/Material", 
            "title": "Milling Material"
        }, 
        {
            "location": "/Milling/Material/#milling-material", 
            "text": "", 
            "title": "Milling Material"
        }, 
        {
            "location": "/Milling/Material/#clamping-holes", 
            "text": "The CNC has a spoiler board located on its base. Generally, you try to avoid milling into the spoiler but it can be replaced.  \nThe current method for securing material is to just use a glue gun to stick it down then peel it off afterwards.     Later on we may have some mounting holes for clamps, although those haven t been added in just yet.", 
            "title": "Clamping Holes"
        }, 
        {
            "location": "/Milling/Material/#mdf", 
            "text": "So far I ve used MDF 12mm thick cut into sections using the table saw.  \nHowever, it s advisable to limit the depth of a pass to about 2mm / 3mm or so at one time, to avoid overloading the stepper motors on the device (milling too much out at one time)", 
            "title": "MDF"
        }, 
        {
            "location": "/Milling/Material/#metal", 
            "text": "The Ox CNC has Nema23 motor s but I think we re only driving them at about 50% of the power  \ndue to the stepper drivers in use. Generally with metals you have to follow speeds and feeds.  \nThis is where the speed of the spindle has to match the feedrate through the material.   http://www.cnccookbook.com/GWCalcFeedsSpeeds.htm   I d recommend trying two flute bits with aluminum.  \nI ve also got a rough speeds / feeds calculator here in the form of a spreadsheet:   https://github.com/HACManchester/Tools.OxCNC/tree/master/MkDocs/docs/images/Milling/Material", 
            "title": "Metal"
        }, 
        {
            "location": "/Milling/FeedRates/", 
            "text": "Feed Rates\n\n\nOverview\n\n\nThe feed rate is the speed at which the spindle travels through the material \n\nToo slow and the milling process can take hours to complete, \n\ntoo fast and it can lead to the spindle over heating or bending with excessive load. \n\nSpeeds tend to be measured in mm/min.\n\n\nA speed which is too fast is really bad, as it can lead to:\n\n\n\n\nThe milling bit becoming too stressed / breaking / bending\n\n\nThe machine skipping steps leading to all sorts of problems with miss-alignments\n\n\n\n\nTo get the best speeds, it\ns best to do a pass with a larger mill bit first, then a smaller bit afterwards. \n\nAlso try to set the speeds in the Cam software instead of using the multiplier in Chillipepr\n\n\nFeed Rate recommendations\n\n\n400W Spindle - MDF\n\n\nTODO\n \n\nWe could do with experimenting with different speeds / spindles / materials etc.\nSo far I\nve not tested a 6mm bit with the spindle, but we need to use one where an area needs to be leveled out \nas trying to do this with a 3mm bit will take a long time.\n\n\nFor MDF I\nd recommend we only do \n3mm\n at a time on a given pass for the depth of cut \n\nCommerical software such as hsmworks tends to default to about 1000mm/min and 333.3 mm/min but this is way too fast\n\n\n\n\n\n\n\n\nMaterial\n\n\nBit Type\n\n\nCutting Speed\n\n\nPlunge Speed\n\n\nDepth Pass\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMDF\n\n\n3mm Flat End Mill\n\n\n300mm/min\n\n\n83.325mm/min\n\n\n1 mm - 3 mm\n\n\nThis seems a safe setting for general use\n\n\n\n\n\n\nMDF\n\n\n6mm Flat End Mill\n\n\n300mm/min\n\n\n83.325mm/min\n\n\n1 mm - 3 mm\n\n\nNot sure with this spindle, needs to be tested\n\n\n\n\n\n\n\n\nI\nve noticed that when setting the max depth of cut to 2mm instead of 1mm when going around the outside of a part. \n\nThis can result in the part becoming too loose early on during the final pass / cut around the outside. \n\nSo if you are going to do that try to hold the part down a bit with something heavy.\n\n\nConsiderations\n\n\nHeat\n\n\nThe first consideration is the amount of heat generated by milling through the material.\nWith a really small mill bit it\ns going to get hotter more quickly than a larger mill bit.\nThis is due to the larger mill bit having more metal to store / get rid of the heat.\n\n\nA dremmel typically isn\nt cooled, but the 400W spindle has air flow over the bit and the spindle, this which allows us to mill more.\nAs one example, while milling mdf with a dremmel and too high a feed rate I managed to cause the mdf to turn black and start to burn.\nWith an air cooled spindle such as the one currently on the Ox CNC this doesn\nt seem to have this problem.\n\n\nSkipped Steps\n\n\nThe Ox CNC is belt driven with Nema 23\ns on a belt which can provide a lot of torque.\nBut the stepper drivers are currently low power so if we run too quickly or too deeply this can lead to uneven cuts.", 
            "title": "Feed Rates"
        }, 
        {
            "location": "/Milling/FeedRates/#feed-rates", 
            "text": "", 
            "title": "Feed Rates"
        }, 
        {
            "location": "/Milling/FeedRates/#overview", 
            "text": "The feed rate is the speed at which the spindle travels through the material  \nToo slow and the milling process can take hours to complete,  \ntoo fast and it can lead to the spindle over heating or bending with excessive load.  \nSpeeds tend to be measured in mm/min.  A speed which is too fast is really bad, as it can lead to:   The milling bit becoming too stressed / breaking / bending  The machine skipping steps leading to all sorts of problems with miss-alignments   To get the best speeds, it s best to do a pass with a larger mill bit first, then a smaller bit afterwards.  \nAlso try to set the speeds in the Cam software instead of using the multiplier in Chillipepr", 
            "title": "Overview"
        }, 
        {
            "location": "/Milling/FeedRates/#feed-rate-recommendations", 
            "text": "", 
            "title": "Feed Rate recommendations"
        }, 
        {
            "location": "/Milling/FeedRates/#400w-spindle-mdf", 
            "text": "TODO   \nWe could do with experimenting with different speeds / spindles / materials etc.\nSo far I ve not tested a 6mm bit with the spindle, but we need to use one where an area needs to be leveled out \nas trying to do this with a 3mm bit will take a long time.  For MDF I d recommend we only do  3mm  at a time on a given pass for the depth of cut  \nCommerical software such as hsmworks tends to default to about 1000mm/min and 333.3 mm/min but this is way too fast     Material  Bit Type  Cutting Speed  Plunge Speed  Depth Pass  Description      MDF  3mm Flat End Mill  300mm/min  83.325mm/min  1 mm - 3 mm  This seems a safe setting for general use    MDF  6mm Flat End Mill  300mm/min  83.325mm/min  1 mm - 3 mm  Not sure with this spindle, needs to be tested     I ve noticed that when setting the max depth of cut to 2mm instead of 1mm when going around the outside of a part.  \nThis can result in the part becoming too loose early on during the final pass / cut around the outside.  \nSo if you are going to do that try to hold the part down a bit with something heavy.", 
            "title": "400W Spindle - MDF"
        }, 
        {
            "location": "/Milling/FeedRates/#considerations", 
            "text": "", 
            "title": "Considerations"
        }, 
        {
            "location": "/Milling/FeedRates/#heat", 
            "text": "The first consideration is the amount of heat generated by milling through the material.\nWith a really small mill bit it s going to get hotter more quickly than a larger mill bit.\nThis is due to the larger mill bit having more metal to store / get rid of the heat.  A dremmel typically isn t cooled, but the 400W spindle has air flow over the bit and the spindle, this which allows us to mill more.\nAs one example, while milling mdf with a dremmel and too high a feed rate I managed to cause the mdf to turn black and start to burn.\nWith an air cooled spindle such as the one currently on the Ox CNC this doesn t seem to have this problem.", 
            "title": "Heat"
        }, 
        {
            "location": "/Milling/FeedRates/#skipped-steps", 
            "text": "The Ox CNC is belt driven with Nema 23 s on a belt which can provide a lot of torque.\nBut the stepper drivers are currently low power so if we run too quickly or too deeply this can lead to uneven cuts.", 
            "title": "Skipped Steps"
        }, 
        {
            "location": "/Milling/Milling/", 
            "text": "Milling\n\n\nAll of the controls associated with the actual milling are located on the left hand side. \n\nThe emergency / immediate stop is also located on the right hand side\n\n\n\n\n \n\n\nZero the Machine\n\n\nOne of the first steps is to get the head of the machine in the right place.\nIt all depends on where you\nve put the origin when using the CAM software, but generally placing the head at the lower left corner of where you will be milling is the best bet.\nAlso you need to ether jog or manually adjust the Z Height so that the mill bit is just touching the surface of the material to be milled.\n\n\nOne trick to figuring out when the mill bit is just touching the surface, is to turn on the spindle then jog the head down slowly 0.1 mm at a time\nuntill you hear the noise of the material being grinded.\n\n\nAnother idea before you start milling is to make a note of the absolute cordinates of the starting point of the machine if you need to start over.\n\n\nSet the Feed Rate Multiplier\n\n\nAssuming you\nve already loaded in the G-Code into Chillipepr (drag and drop the file onto the browser window) \n\nThe most important setting is the Feed Rate\n\n\n \n\n\nIf you\nve already set the feedrate within the CAM software \n\n(used to create the G-Code) then you can just leave this at \n1.00\n \n\nThis value is a multiplier so \n0.5\n = half speed.\n\n\nA speed which is too fast is really bad, as it can lead to:\n\n\n\n\nThe milling bit becoming too stressed / breaking / bending\n\n\nThe machine skipping steps leading to all sorts of problems with mis-alignments\n\n\n\n\nIf you\nve used hsmworks for example and left the feedrate at the default speed, then it will be about 10 x too fast for the mill.\nIn that case 0.1 is a safe value. \n\n\nThat being said it\ns generally better to make sure the feedrate is set correctly within the CAM software and to use a 1.0 value here if you can.\nThe reason being is that the motion will be generally less jerky overall due to grbl not having to compensate.\n\n\nSwitching on the Spindle\n\n\nIn order to get the spindle to operate, there\ns a small adjustable pot on the back of the machine to adjust the speed of the spindle. \n\nIn one direction it\ns off, the other it\ns full speed on.\n\n\n \n\n\nThe spindle will only operate if the main power switch is switched on (which also powers the steppers)\n\n\nStart the G-Code\n\n\nTo start running the G-Code use the play button, make sure the spindle is running before you do this.\n\n\n \n\n\nUsing the Vacuum Cleaner\n\n\nWhile cutting there is a white hoover / extractor we can use to suck up the mdf dust / particles that\ns milled to better see what\ns going on.\n\n\n \n\n\nUsing a different starting point (Optional)\n\n\nOne of the tricks Chillipepr allows us to do is to start from a line further down in the G-Code.\nIf you click on one of the lines of the G-Code in the list\n\n\n\n\nThis gives you an indication of where the CNC will be from an absolute position\n\n\nThis allows you to set this as a new starting point when playing the G-Code\n\n\nWe can get the head to move to this position / skip the G-Code above\n\n\n\n\n \n\n\nStopping Milling\n\n\nThere\ns a couple of different ways to stop the milling\n\n\nRed Switch / Emergency Stop\n\n\nIf you\nre really in a rush because something has horribly gone wrong, just mash the EStop button / or red power off button.\n\n\nStopping the Queue\n\n\nThe controls on the left do have a stop button.\nHowever, this only stops further messages being queued into the grbl firmware.\nIf you use this the CNC will probably still continue on for a while longer while it gets to the end of its buffer stream\n\n\n \n\n\nImmediate Stop\n\n\nIf you want to try and stop the machine immediately within Chillipepr then there\ns a 2nd stop button on the right hand side.\nThese buttons send special commands to grbl to stop the G-Code right away (without waiting for the buffer to flush / complete).\nThere\ns also a resume button next to it as well\n\n\n \n\n\nThe Ctrl-X button will also perform a soft reset of the Grbl board. \n\nBut make sure to re-home when using that.", 
            "title": "Milling"
        }, 
        {
            "location": "/Milling/Milling/#milling", 
            "text": "All of the controls associated with the actual milling are located on the left hand side.  \nThe emergency / immediate stop is also located on the right hand side", 
            "title": "Milling"
        }, 
        {
            "location": "/Milling/Milling/#zero-the-machine", 
            "text": "One of the first steps is to get the head of the machine in the right place.\nIt all depends on where you ve put the origin when using the CAM software, but generally placing the head at the lower left corner of where you will be milling is the best bet.\nAlso you need to ether jog or manually adjust the Z Height so that the mill bit is just touching the surface of the material to be milled.  One trick to figuring out when the mill bit is just touching the surface, is to turn on the spindle then jog the head down slowly 0.1 mm at a time\nuntill you hear the noise of the material being grinded.  Another idea before you start milling is to make a note of the absolute cordinates of the starting point of the machine if you need to start over.", 
            "title": "Zero the Machine"
        }, 
        {
            "location": "/Milling/Milling/#set-the-feed-rate-multiplier", 
            "text": "Assuming you ve already loaded in the G-Code into Chillipepr (drag and drop the file onto the browser window)  \nThe most important setting is the Feed Rate     If you ve already set the feedrate within the CAM software  \n(used to create the G-Code) then you can just leave this at  1.00   \nThis value is a multiplier so  0.5  = half speed.  A speed which is too fast is really bad, as it can lead to:   The milling bit becoming too stressed / breaking / bending  The machine skipping steps leading to all sorts of problems with mis-alignments   If you ve used hsmworks for example and left the feedrate at the default speed, then it will be about 10 x too fast for the mill.\nIn that case 0.1 is a safe value.   That being said it s generally better to make sure the feedrate is set correctly within the CAM software and to use a 1.0 value here if you can.\nThe reason being is that the motion will be generally less jerky overall due to grbl not having to compensate.", 
            "title": "Set the Feed Rate Multiplier"
        }, 
        {
            "location": "/Milling/Milling/#switching-on-the-spindle", 
            "text": "In order to get the spindle to operate, there s a small adjustable pot on the back of the machine to adjust the speed of the spindle.  \nIn one direction it s off, the other it s full speed on.     The spindle will only operate if the main power switch is switched on (which also powers the steppers)", 
            "title": "Switching on the Spindle"
        }, 
        {
            "location": "/Milling/Milling/#start-the-g-code", 
            "text": "To start running the G-Code use the play button, make sure the spindle is running before you do this.", 
            "title": "Start the G-Code"
        }, 
        {
            "location": "/Milling/Milling/#using-the-vacuum-cleaner", 
            "text": "While cutting there is a white hoover / extractor we can use to suck up the mdf dust / particles that s milled to better see what s going on.", 
            "title": "Using the Vacuum Cleaner"
        }, 
        {
            "location": "/Milling/Milling/#using-a-different-starting-point-optional", 
            "text": "One of the tricks Chillipepr allows us to do is to start from a line further down in the G-Code.\nIf you click on one of the lines of the G-Code in the list   This gives you an indication of where the CNC will be from an absolute position  This allows you to set this as a new starting point when playing the G-Code  We can get the head to move to this position / skip the G-Code above", 
            "title": "Using a different starting point (Optional)"
        }, 
        {
            "location": "/Milling/Milling/#stopping-milling", 
            "text": "There s a couple of different ways to stop the milling", 
            "title": "Stopping Milling"
        }, 
        {
            "location": "/Milling/Milling/#red-switch-emergency-stop", 
            "text": "If you re really in a rush because something has horribly gone wrong, just mash the EStop button / or red power off button.", 
            "title": "Red Switch / Emergency Stop"
        }, 
        {
            "location": "/Milling/Milling/#stopping-the-queue", 
            "text": "The controls on the left do have a stop button.\nHowever, this only stops further messages being queued into the grbl firmware.\nIf you use this the CNC will probably still continue on for a while longer while it gets to the end of its buffer stream", 
            "title": "Stopping the Queue"
        }, 
        {
            "location": "/Milling/Milling/#immediate-stop", 
            "text": "If you want to try and stop the machine immediately within Chillipepr then there s a 2nd stop button on the right hand side.\nThese buttons send special commands to grbl to stop the G-Code right away (without waiting for the buffer to flush / complete).\nThere s also a resume button next to it as well     The Ctrl-X button will also perform a soft reset of the Grbl board.  \nBut make sure to re-home when using that.", 
            "title": "Immediate Stop"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/", 
            "text": "Installing FlatCam\n\n\nFlatCAM is useful for turning Gerber or Drill files from PCB software into G-Code for a CNC (or svg for a laser cutter) \n\nThe existing self installing version of flatcam is quite old (around 2016). \n\nso below I\nve tried to details the minimum set of steps needed to get it working from source.\n\n\nInstalling Python\n\n\nFirst we need to make sure python 2.7 is installed on the system.\nFor windows I\nd recommend the 64bit version of python 2.7 from \n\n\nhttps://www.python.org/downloads/\n\n\nInstalling PyQt4\n\n\nOne of the things FlatCam uses is QT4 for python. This is fairly easy to install under windows \n\nFirst go to this address\n\n\n\n\nhttps://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4\n\n\n\n\nIf your looking for the python 2.7 / 64bit windows file then this will likley be something like \nPyQt4-4.11.4-cp27-cp27m-win_amd64.whl\n \n\nTo install it into python 2.7\n\n\nC:\\Python27\\Scripts\\pip.exe install PyQt4-4.11.4-cp27-cp27m-win_amd64.whl\n\n\n\n\nInstalling pypiwin32\n\n\nOne thing we also need is pypiwin32 under windows, to install this run the following from the command line\n\n\nC:\\Python27\\Scripts\\pip.exe install pypiwin32\n\n\n\n\nI found on my system I had to force it to re-install for some reason, so if you run into problems running flatcam you may want to try\n\n\nC:\\Python27\\Scripts\\pip.exe install --upgrade --force-reinstall pypiwin32\n\n\n\n\nDownload sources of Flatcam\n\n\nNext we need to download the source code of flatcam. \n\nOne way is to just download the below zip file and extract it into a directory somewhere\n\n\n\n\nhttps://bitbucket.org/jpcgt/flatcam/get/master.zip\n\n\n\n\nAnother way if you can use git is to run the following at a command line\n\n\ngit clone https://bitbucket.org/jpcgt/flatcam\n\n\n\n\nRunning Flatcam\n\n\nNext to try running flatcam\n\n\ncd flatcam\nC:\\Python27\\python flatcam", 
            "title": "Installing FlatCAM"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#installing-flatcam", 
            "text": "FlatCAM is useful for turning Gerber or Drill files from PCB software into G-Code for a CNC (or svg for a laser cutter)  \nThe existing self installing version of flatcam is quite old (around 2016).  \nso below I ve tried to details the minimum set of steps needed to get it working from source.", 
            "title": "Installing FlatCam"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#installing-python", 
            "text": "First we need to make sure python 2.7 is installed on the system.\nFor windows I d recommend the 64bit version of python 2.7 from   https://www.python.org/downloads/", 
            "title": "Installing Python"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#installing-pyqt4", 
            "text": "One of the things FlatCam uses is QT4 for python. This is fairly easy to install under windows  \nFirst go to this address   https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4   If your looking for the python 2.7 / 64bit windows file then this will likley be something like  PyQt4-4.11.4-cp27-cp27m-win_amd64.whl   \nTo install it into python 2.7  C:\\Python27\\Scripts\\pip.exe install PyQt4-4.11.4-cp27-cp27m-win_amd64.whl", 
            "title": "Installing PyQt4"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#installing-pypiwin32", 
            "text": "One thing we also need is pypiwin32 under windows, to install this run the following from the command line  C:\\Python27\\Scripts\\pip.exe install pypiwin32  I found on my system I had to force it to re-install for some reason, so if you run into problems running flatcam you may want to try  C:\\Python27\\Scripts\\pip.exe install --upgrade --force-reinstall pypiwin32", 
            "title": "Installing pypiwin32"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#download-sources-of-flatcam", 
            "text": "Next we need to download the source code of flatcam.  \nOne way is to just download the below zip file and extract it into a directory somewhere   https://bitbucket.org/jpcgt/flatcam/get/master.zip   Another way if you can use git is to run the following at a command line  git clone https://bitbucket.org/jpcgt/flatcam", 
            "title": "Download sources of Flatcam"
        }, 
        {
            "location": "/PCB/Installing-FlatCAM/#running-flatcam", 
            "text": "Next to try running flatcam  cd flatcam\nC:\\Python27\\python flatcam", 
            "title": "Running Flatcam"
        }, 
        {
            "location": "/Other/MachinableWax/", 
            "text": "Machinable Wax\n\n\nOverview\n\n\nWe currently have some wax and plastic we could try to use with the following process. \n\n\n\n\nhttps://leedshackspace.org.uk/2016/05/09/making-machinable-wax/", 
            "title": "Machinable Wax"
        }, 
        {
            "location": "/Other/MachinableWax/#machinable-wax", 
            "text": "", 
            "title": "Machinable Wax"
        }, 
        {
            "location": "/Other/MachinableWax/#overview", 
            "text": "We currently have some wax and plastic we could try to use with the following process.    https://leedshackspace.org.uk/2016/05/09/making-machinable-wax/", 
            "title": "Overview"
        }, 
        {
            "location": "/Maintenance/Device-Overview/", 
            "text": "Device Overview\n\n\nWe currently have a ooznest Ox CNC.\n\n\n\n\nThe main controller board is a Arduino Uno running Grbl 1.1\n\n\nThere is also a CNC Shield, I think one of these - \nhttps://blog.protoneer.co.nz/arduino-cnc-shield/\n\n\nThe stepper motors are Nema23\ns, I think 2.8A max based on the ooznest site\n\n\nI think the stepper drivers are Pololu - Allegro A4988, which are probably limited to around 1A max without cooling\n\n\n\n\n\n\n \n\n\nMaximum travel\n\n\n\n\nX Axis: 563mm (left to right)\n\n\nY Axis: 746mm (front to back)\n\n\nZ Axis: 68mm (up to down)\n\n\n\n\nFirmware Overview\n\n\nCurrently the Ox CNC uses an Arduino Uno with Grbl 1.1\n\n\n\n\nhttps://github.com/grbl/grbl\n\n\nhttps://github.com/grbl/grbl/wiki/Configuring-Grbl-v0.8#grbls-xval-settings-and-what-they-mean\n\n\nThe original version of the firmware was 0.9\n\n\nThis has now been updated to version 1.1 which uses a baud of \n115200\n\n\n\n\nPower Supplies\n\n\nThere are 2 PSU\ns in use\n\n\n\n\nThe first powers the spindle via a black box BLDC driver\n\n\nThe second powers the stepper drivers / cnc shield\n\n\n\n\nSpindle\n\n\nThe spindle is a 400W one controlled via a potentiometer, driven by a BLDC driver.\nThe plan is to switch this across to pmw at some point.\n\n\n \n\n\nRpi\n\n\nThere is a RpiV1 acting as a serial proxy so that we can connect to the OxCNC over the network to it\ns serial port.\n\n\n \n\n\nEnd Stops\n\n\nThere are inductive end stops for every direction except for travelling downwards. \n\nThe downward limit is handled via a software limit which is based on the homing position.\n\n\nTool Heads\n\n\nFor the collets we have ER11 collets located in a box next to the CNC.\nideally we could do with milling out a wooden plate for holding them, on a pull out shelf etc.\n\n\nThe milling bits are generally 3mm or 6mm. \n\nWe also have other smaller bits for pcb milling etc.", 
            "title": "Device Overview"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#device-overview", 
            "text": "We currently have a ooznest Ox CNC.   The main controller board is a Arduino Uno running Grbl 1.1  There is also a CNC Shield, I think one of these -  https://blog.protoneer.co.nz/arduino-cnc-shield/  The stepper motors are Nema23 s, I think 2.8A max based on the ooznest site  I think the stepper drivers are Pololu - Allegro A4988, which are probably limited to around 1A max without cooling       Maximum travel   X Axis: 563mm (left to right)  Y Axis: 746mm (front to back)  Z Axis: 68mm (up to down)", 
            "title": "Device Overview"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#firmware-overview", 
            "text": "Currently the Ox CNC uses an Arduino Uno with Grbl 1.1   https://github.com/grbl/grbl  https://github.com/grbl/grbl/wiki/Configuring-Grbl-v0.8#grbls-xval-settings-and-what-they-mean  The original version of the firmware was 0.9  This has now been updated to version 1.1 which uses a baud of  115200", 
            "title": "Firmware Overview"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#power-supplies", 
            "text": "There are 2 PSU s in use   The first powers the spindle via a black box BLDC driver  The second powers the stepper drivers / cnc shield", 
            "title": "Power Supplies"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#spindle", 
            "text": "The spindle is a 400W one controlled via a potentiometer, driven by a BLDC driver.\nThe plan is to switch this across to pmw at some point.", 
            "title": "Spindle"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#rpi", 
            "text": "There is a RpiV1 acting as a serial proxy so that we can connect to the OxCNC over the network to it s serial port.", 
            "title": "Rpi"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#end-stops", 
            "text": "There are inductive end stops for every direction except for travelling downwards.  \nThe downward limit is handled via a software limit which is based on the homing position.", 
            "title": "End Stops"
        }, 
        {
            "location": "/Maintenance/Device-Overview/#tool-heads", 
            "text": "For the collets we have ER11 collets located in a box next to the CNC.\nideally we could do with milling out a wooden plate for holding them, on a pull out shelf etc.  The milling bits are generally 3mm or 6mm.  \nWe also have other smaller bits for pcb milling etc.", 
            "title": "Tool Heads"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/", 
            "text": "Updating the Firmware\n\n\nOverview\n\n\nThis is a list of steps to follow when updating the Grbl firmware.\n\nWe\nre currently storing the firmware and settings here: \n\n\nhttps://github.com/HACManchester/Tools.OxCNC/tree/master/Firmware\n\n\nBackup Settings / Firmware\n\n\nBackup Settings\n\n\nThe first thing we need to do is backup the settings from the Grbl firmware / Arduino\n\n\n\n\nHook up the arduino board directly to a laptop using the USB cable that runs into the Rpi\n\n\nOpen putty and connect to the Grbl / Arduino Uno\n\n\nhttp://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n\n\nType $$ followed by a carriage return\n\n\nCopy and paste the output into a text file\n\n\n\n\nBackup Firmware\n\n\nIf you want to backup the existing firmware:\n\n\nUnder windows (check the com port number)\n\n\ncd C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\bin\navrdude -C \nC:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf\n -p m328p -P com4 -c arduino -b 115200 -F -U flash:r:C:\\Apps\\flash.hex:i\navrdude -C \nC:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf\n -p m328p -P com4 -c arduino -b 115200 -F -U eeprom:r:C:\\Apps\\eeprom.hex:i\navrdude -C \nC:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf\n -p m328p -P com4 -c arduino -b 115200 -F -U efuse:r:C:\\Apps\\efuse.hex:i\navrdude -C \nC:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf\n -p m328p -P com4 -c arduino -b 115200 -F -U lfuse:r:C:\\Apps\\lfuse.hex:i\navrdude -C \nC:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf\n -p m328p -P com4 -c arduino -b 115200 -F -U hfuse:r:C:\\Apps\\hfuse.hex:i\n\n\n\n\nUnder Linux it will be something like\n\n\navrdude -p m328p -P /dev/tty.usbserial- -c arduino -b 38400 -F -U flash:r:backup1.hex:i\n\n\n\n\nFlash new Firmware\n\n\nDownload Files\n\n\nNext we need to grab the latest firmware version\n\n\n\n\nhttps://github.com/gnea/grbl\n\n\nVersion 1.1f (2017-08-01) seems to be the latest at the time of writing\n\n\nThe board in use is a arduino Uno with a 328p chipset so this should match the downloaded binary\n\n\n\n\nNext download XLoader\n\n\n\n\nhttp://russemotto.com/xloader/\n\n\n\n\nFlash Firmware\n\n\nNext to flash the new Hex file to the Arduino\n\n\n\n\nReset the Controller board\n\n\nOpen XLoader\n\n\nSelect the correct \nCOM Port\n\n\nMake sure \nArduino UNO\n is selected for the device\n\n\nBrowse to the new hex file\n\n\nClick Upload\n\n\nWait for the upload to complete\n\n\n\n\nRestore custom settings\n\n\nAs a final step we need to restore any custom settings that were originally applied\n\n\n\n\nConnect via putty (with the latest firmware this is now at a speed of 115200)\n\n\nUse $$ to list all settings\n\n\nAdd in any differences needed to the settings \n\n    This includes settings such as how many revolutions per travel of mm / soft limits etc", 
            "title": "Updating the Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#updating-the-firmware", 
            "text": "", 
            "title": "Updating the Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#overview", 
            "text": "This is a list of steps to follow when updating the Grbl firmware. \nWe re currently storing the firmware and settings here:   https://github.com/HACManchester/Tools.OxCNC/tree/master/Firmware", 
            "title": "Overview"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#backup-settings-firmware", 
            "text": "", 
            "title": "Backup Settings / Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#backup-settings", 
            "text": "The first thing we need to do is backup the settings from the Grbl firmware / Arduino   Hook up the arduino board directly to a laptop using the USB cable that runs into the Rpi  Open putty and connect to the Grbl / Arduino Uno  http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html  Type $$ followed by a carriage return  Copy and paste the output into a text file", 
            "title": "Backup Settings"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#backup-firmware", 
            "text": "If you want to backup the existing firmware:  Under windows (check the com port number)  cd C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\bin\navrdude -C  C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf  -p m328p -P com4 -c arduino -b 115200 -F -U flash:r:C:\\Apps\\flash.hex:i\navrdude -C  C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf  -p m328p -P com4 -c arduino -b 115200 -F -U eeprom:r:C:\\Apps\\eeprom.hex:i\navrdude -C  C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf  -p m328p -P com4 -c arduino -b 115200 -F -U efuse:r:C:\\Apps\\efuse.hex:i\navrdude -C  C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf  -p m328p -P com4 -c arduino -b 115200 -F -U lfuse:r:C:\\Apps\\lfuse.hex:i\navrdude -C  C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr\\etc\\avrdude.conf  -p m328p -P com4 -c arduino -b 115200 -F -U hfuse:r:C:\\Apps\\hfuse.hex:i  Under Linux it will be something like  avrdude -p m328p -P /dev/tty.usbserial- -c arduino -b 38400 -F -U flash:r:backup1.hex:i", 
            "title": "Backup Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#flash-new-firmware", 
            "text": "", 
            "title": "Flash new Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#download-files", 
            "text": "Next we need to grab the latest firmware version   https://github.com/gnea/grbl  Version 1.1f (2017-08-01) seems to be the latest at the time of writing  The board in use is a arduino Uno with a 328p chipset so this should match the downloaded binary   Next download XLoader   http://russemotto.com/xloader/", 
            "title": "Download Files"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#flash-firmware", 
            "text": "Next to flash the new Hex file to the Arduino   Reset the Controller board  Open XLoader  Select the correct  COM Port  Make sure  Arduino UNO  is selected for the device  Browse to the new hex file  Click Upload  Wait for the upload to complete", 
            "title": "Flash Firmware"
        }, 
        {
            "location": "/Maintenance/Updating-Firmware/#restore-custom-settings", 
            "text": "As a final step we need to restore any custom settings that were originally applied   Connect via putty (with the latest firmware this is now at a speed of 115200)  Use $$ to list all settings  Add in any differences needed to the settings  \n    This includes settings such as how many revolutions per travel of mm / soft limits etc", 
            "title": "Restore custom settings"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/", 
            "text": "Grbl Settings\n\n\nConnecting to grbl\n\n\nSince the grbl board is placed behind a Rpi running the serial proxy.\n\nFirst we need to browse to the following link in our browser\n\n\n\n\nhttp://172.16.0.8:8989\n\n\n\n\nCurrently firmware and settings are stored within\n\n\n\n\nhttps://github.com/HACManchester/Tools.OxCNC/Firmware/\n\n\n\n\nSettings\n\n\nReading Settings\n\n\nTo read the grbl settings we need to send $$ to grbl over the serial port\n\n\nTo do this via the serial proxy we can type in the following into the web client\n\n\nsend /dev/ttyACM0 $$\n\n\n\n\nReading Firmware version\n\n\nTo read the current firmware version\n\n\nsend /dev/ttyACM0 $I\n\n\n\n\nAs of writing the current firmware version is: 1.1f\n\n\nSoft End Stops\n\n\nFor the most part we don\nt really need software stops apart from one place which is when the spindle travels downwards. \n\nI\nve enabled them, and added 1mm onto each setting which seems to get them to work right\n\n\nFrom the home position the max \n\n\n\n\nFor Z = 67mm from home (68mm from the top of where the end stop is)\n\n\nFor X = 562mm (switch triggers after 564)\n\n\nFor Y = 745mm (switch triggers after 748)\n\n\n\n\nThis equals\n\n\n$20=1\n$130=563.000 - XMax travel\n$131=746.000 - YMax travel\n$132=68.000 - ZMax travel", 
            "title": "Grbl Settings"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#grbl-settings", 
            "text": "", 
            "title": "Grbl Settings"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#connecting-to-grbl", 
            "text": "Since the grbl board is placed behind a Rpi running the serial proxy. \nFirst we need to browse to the following link in our browser   http://172.16.0.8:8989   Currently firmware and settings are stored within   https://github.com/HACManchester/Tools.OxCNC/Firmware/", 
            "title": "Connecting to grbl"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#settings", 
            "text": "", 
            "title": "Settings"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#reading-settings", 
            "text": "To read the grbl settings we need to send $$ to grbl over the serial port  To do this via the serial proxy we can type in the following into the web client  send /dev/ttyACM0 $$", 
            "title": "Reading Settings"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#reading-firmware-version", 
            "text": "To read the current firmware version  send /dev/ttyACM0 $I  As of writing the current firmware version is: 1.1f", 
            "title": "Reading Firmware version"
        }, 
        {
            "location": "/Maintenance/Grbl-Settings/#soft-end-stops", 
            "text": "For the most part we don t really need software stops apart from one place which is when the spindle travels downwards.  \nI ve enabled them, and added 1mm onto each setting which seems to get them to work right  From the home position the max    For Z = 67mm from home (68mm from the top of where the end stop is)  For X = 562mm (switch triggers after 564)  For Y = 745mm (switch triggers after 748)   This equals  $20=1\n$130=563.000 - XMax travel\n$131=746.000 - YMax travel\n$132=68.000 - ZMax travel", 
            "title": "Soft End Stops"
        }, 
        {
            "location": "/Maintenance/Todo/", 
            "text": "Todo\n\n\nMilling bits\n\n\n\n\nIdeally we could do with some 6mm milling bits for clearing large areas \n\n    \nhttps://www.amazon.co.uk/gp/product/B00XTWOT9O\n\n\nlook into how many 3mm milling bits we have as they are considered a consumable.\n\n\n\n\nMounting Holes\n\n\n\n\nAdd some screw in mounting holes to the spoiler table\n\n\n\n\nStepper Drivers\n\n\n\n\nAt the moment the stepper drivers are around 1A, but the motors are around 2.8A \n\n    So we\nre probably only getting limited torque / power from the motors. \n\n    A future idea would be to upgrade the electronics with some TMC stepper drivers.\n\n\n\n\nRpi\n\n\n\n\nWe need to upgrade the Rpi1 to a Rpi3 \n\n    The serial buffer is maxing out the CPU, and it would be useful to have a remote desktop session available.\n\n\n\n\nRemote machine\n\n\n\n\nWe need to setup the Rpi3 with remote desktop, and have a seperate machine that can be used for control from a monitor etc.\n\n\n\n\n4th Axis\n\n\n\n\nOne interesting thing we could do is 3d print a 4th axis for the cnc.\n\n\n\n\nDust Brush\n\n\nWe need to 3d Print a head to go over the top of the milling bit and allow the attachment of\n\n\n\n\nA ring of LED\ns\n\n\nThe hose for the vacume extractor.\n\n\n\n\nTouch Plate\n\n\nLook into setting up a touch plate for mill bits, and a downward inductive sensor for PCB milling\n\n\nElectronics\n\n\nIt may be best to reset the grbl board on power down / estop\nthat way a home will be forced before the machine can start receiving G-Code again\n\n\nPMW Spindle Control\n\n\nAccording to Ian the spindle speed may already be wired up to the control board.\nBut the reason for using the variable pot instead was because it was difficult to get the pre-processor to generate the G-Code to switch it on\nIan got tired of watching the head crash into the material with turning on\n\n\nWe may need to uncomment the below in the source\n\n\n// #define MINIMUM_SPINDLE_PWM 5 // Default disabled. Uncomment to enable. Integer (0-255)", 
            "title": "Todo"
        }, 
        {
            "location": "/Maintenance/Todo/#todo", 
            "text": "", 
            "title": "Todo"
        }, 
        {
            "location": "/Maintenance/Todo/#milling-bits", 
            "text": "Ideally we could do with some 6mm milling bits for clearing large areas  \n     https://www.amazon.co.uk/gp/product/B00XTWOT9O  look into how many 3mm milling bits we have as they are considered a consumable.", 
            "title": "Milling bits"
        }, 
        {
            "location": "/Maintenance/Todo/#mounting-holes", 
            "text": "Add some screw in mounting holes to the spoiler table", 
            "title": "Mounting Holes"
        }, 
        {
            "location": "/Maintenance/Todo/#stepper-drivers", 
            "text": "At the moment the stepper drivers are around 1A, but the motors are around 2.8A  \n    So we re probably only getting limited torque / power from the motors.  \n    A future idea would be to upgrade the electronics with some TMC stepper drivers.", 
            "title": "Stepper Drivers"
        }, 
        {
            "location": "/Maintenance/Todo/#rpi", 
            "text": "We need to upgrade the Rpi1 to a Rpi3  \n    The serial buffer is maxing out the CPU, and it would be useful to have a remote desktop session available.", 
            "title": "Rpi"
        }, 
        {
            "location": "/Maintenance/Todo/#remote-machine", 
            "text": "We need to setup the Rpi3 with remote desktop, and have a seperate machine that can be used for control from a monitor etc.", 
            "title": "Remote machine"
        }, 
        {
            "location": "/Maintenance/Todo/#4th-axis", 
            "text": "One interesting thing we could do is 3d print a 4th axis for the cnc.", 
            "title": "4th Axis"
        }, 
        {
            "location": "/Maintenance/Todo/#dust-brush", 
            "text": "We need to 3d Print a head to go over the top of the milling bit and allow the attachment of   A ring of LED s  The hose for the vacume extractor.", 
            "title": "Dust Brush"
        }, 
        {
            "location": "/Maintenance/Todo/#touch-plate", 
            "text": "Look into setting up a touch plate for mill bits, and a downward inductive sensor for PCB milling", 
            "title": "Touch Plate"
        }, 
        {
            "location": "/Maintenance/Todo/#electronics", 
            "text": "It may be best to reset the grbl board on power down / estop\nthat way a home will be forced before the machine can start receiving G-Code again", 
            "title": "Electronics"
        }, 
        {
            "location": "/Maintenance/Todo/#pmw-spindle-control", 
            "text": "According to Ian the spindle speed may already be wired up to the control board.\nBut the reason for using the variable pot instead was because it was difficult to get the pre-processor to generate the G-Code to switch it on\nIan got tired of watching the head crash into the material with turning on  We may need to uncomment the below in the source  // #define MINIMUM_SPINDLE_PWM 5 // Default disabled. Uncomment to enable. Integer (0-255)", 
            "title": "PMW Spindle Control"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/", 
            "text": "Electronic Upgrade\n\n\nI\nve listed some plans to upgrade the electronics on the CNC within the hackspace \n\nCurrently we\nre using grbl on a 16bit arduino with small Alegro drivers which isn\nt ideal\n\n\nController\n\n\nFor the controller board the plan I\nve got at the moment\nis to instead use a arduino due (32bit) with a breakout board\n\n\nfor the breakout board I\nm currently using one of these at home\n\n\n\n\nhttp://ooznest.co.uk/3D-Printer-Electronic-Parts/RADDS-3D-Printer-Controller-Board\n\n\n\n\nBut what I think I\nll try and do instead of buying one is make a custom board\nthat as green plugs for the stepper drivers \n\nas that is designed more for pololu and I already have the kicad schematic for it as well.\n\n\nStepper drivers\n\n\nFor the stepper drivers there\ns currently two options I\nm looking into\n\n\nDM542 / DQ542MA\n\n\nThis is one option, it\ns easier to use as it\ns a pre-made module \n\nDM542 / DQ542MA seem to be a popular choice on the cnc forums I think\nI think they have DSP\ns in so are a bit quieter\n\n\n\n\nhttp://openbuildspartstore.com/dq542ma-stepper-motor-driver/\n 30 x 4\n\n\nhttps://www.amazon.co.uk/s/ref=nb_sb_noss?url=search-alias%3Daps\nfield-keywords=dm542\n\n\nhttps://www.youtube.com/watch?v=8sHsa4FZ2Cc\n\n\nhttps://www.amazon.co.uk/Kehuashina-Leadshine-DM542-05-DM54205-Stepper/dp/B07BBCWH7X/ref=sr_1_2?ie=UTF8\nqid=1528157669\nsr=8-2\nkeywords=dm542\n\n\n\n\nTMC5160\n\n\nThis is the one I\nd like to use, possibly sitting on top of another board with a bit of opto isolation\n\n\n\n\nhttps://www.digikey.co.uk/product-detail/en/trinamic-motion-control-gmbh/TMC5160-BOB/1460-1250-ND/8440397\n\n\n\n\ntrinamic drivers have some features built in we could use later on such as measuring the amount of torque against the bit\nor stealthchop etc, but to start with we could just run them as normal in step / dir mode \n\nhowever those fet\ns are only rated for 2.8A so I\nve asked trinamic if they think the Bob board would be suitable.\nAlso an additional heatsink may be needed.\n\n\nOther suggestions\n\n\n\n\nhttps://www.buildyourcnc.com/item/electronicsAndMotors-stepper-driver-3!0a\n\n\nhttps://www.youtube.com/watch?v=woyp03D0neY\n\n\n\n\nCNC Cable / Connectors\n\n\nWe\nll need to move the electronics to it\ns own seperate box under the bench\n\n\n\n\nstepper driver cable - ?? not sure how many meters to use yet\n    \nhttps://www.cnc4you.co.uk/Electrical/Cables-Connectors/4-Core-Screened-Cable-0.75mm-12Amp\n\n\nConnectors - todo check which connectors to use, I think those 4 pin areospace ones\n\n\n\n\nBox\n\n\nI\nm not sure if the box I\nve got so far will be big enough for everything\ncould do with finding something a bit bigger in the space\n\n\nTODO\n\n\nEndstops\n\n\nThe current end stop board uses relays, I might try and replace that with an opto-coupler board\n\n\nMachine kit\n\n\nlater on we may want to look into using a beaglebone board with a cape of some description with machinekit\nhowever I need to spend some time testing / figuring that out so for now we\nll stick to g2core since I\nve already got that working before\nalso we need it to work with chillipepr.\n\n\n\n\nhttps://jetforme.org/2018/04/machinekit-on-bbb/\n\n\n\n\nSome example cape\ns used with machinekit (cramps / optocape):\n\n\n\n\nhttp://blog.machinekit.io/p/hardware-capes.html#Xylotex\n\n\nhttps://www.tindie.com/products/TEMProducts/optocape/\n\n\nhttps://github.com/dgouramanis/optocape", 
            "title": "Electronics Upgrade"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#electronic-upgrade", 
            "text": "I ve listed some plans to upgrade the electronics on the CNC within the hackspace  \nCurrently we re using grbl on a 16bit arduino with small Alegro drivers which isn t ideal", 
            "title": "Electronic Upgrade"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#controller", 
            "text": "For the controller board the plan I ve got at the moment\nis to instead use a arduino due (32bit) with a breakout board  for the breakout board I m currently using one of these at home   http://ooznest.co.uk/3D-Printer-Electronic-Parts/RADDS-3D-Printer-Controller-Board   But what I think I ll try and do instead of buying one is make a custom board\nthat as green plugs for the stepper drivers  \nas that is designed more for pololu and I already have the kicad schematic for it as well.", 
            "title": "Controller"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#stepper-drivers", 
            "text": "For the stepper drivers there s currently two options I m looking into", 
            "title": "Stepper drivers"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#dm542-dq542ma", 
            "text": "This is one option, it s easier to use as it s a pre-made module  \nDM542 / DQ542MA seem to be a popular choice on the cnc forums I think\nI think they have DSP s in so are a bit quieter   http://openbuildspartstore.com/dq542ma-stepper-motor-driver/  30 x 4  https://www.amazon.co.uk/s/ref=nb_sb_noss?url=search-alias%3Daps field-keywords=dm542  https://www.youtube.com/watch?v=8sHsa4FZ2Cc  https://www.amazon.co.uk/Kehuashina-Leadshine-DM542-05-DM54205-Stepper/dp/B07BBCWH7X/ref=sr_1_2?ie=UTF8 qid=1528157669 sr=8-2 keywords=dm542", 
            "title": "DM542 / DQ542MA"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#tmc5160", 
            "text": "This is the one I d like to use, possibly sitting on top of another board with a bit of opto isolation   https://www.digikey.co.uk/product-detail/en/trinamic-motion-control-gmbh/TMC5160-BOB/1460-1250-ND/8440397   trinamic drivers have some features built in we could use later on such as measuring the amount of torque against the bit\nor stealthchop etc, but to start with we could just run them as normal in step / dir mode  \nhowever those fet s are only rated for 2.8A so I ve asked trinamic if they think the Bob board would be suitable.\nAlso an additional heatsink may be needed.", 
            "title": "TMC5160"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#other-suggestions", 
            "text": "https://www.buildyourcnc.com/item/electronicsAndMotors-stepper-driver-3!0a  https://www.youtube.com/watch?v=woyp03D0neY", 
            "title": "Other suggestions"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#cnc-cable-connectors", 
            "text": "We ll need to move the electronics to it s own seperate box under the bench   stepper driver cable - ?? not sure how many meters to use yet\n     https://www.cnc4you.co.uk/Electrical/Cables-Connectors/4-Core-Screened-Cable-0.75mm-12Amp  Connectors - todo check which connectors to use, I think those 4 pin areospace ones", 
            "title": "CNC Cable / Connectors"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#box", 
            "text": "I m not sure if the box I ve got so far will be big enough for everything\ncould do with finding something a bit bigger in the space", 
            "title": "Box"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#todo", 
            "text": "", 
            "title": "TODO"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#endstops", 
            "text": "The current end stop board uses relays, I might try and replace that with an opto-coupler board", 
            "title": "Endstops"
        }, 
        {
            "location": "/Maintenance/Electronics-Upgrade/#machine-kit", 
            "text": "later on we may want to look into using a beaglebone board with a cape of some description with machinekit\nhowever I need to spend some time testing / figuring that out so for now we ll stick to g2core since I ve already got that working before\nalso we need it to work with chillipepr.   https://jetforme.org/2018/04/machinekit-on-bbb/   Some example cape s used with machinekit (cramps / optocape):   http://blog.machinekit.io/p/hardware-capes.html#Xylotex  https://www.tindie.com/products/TEMProducts/optocape/  https://github.com/dgouramanis/optocape", 
            "title": "Machine kit"
        }
    ]
}